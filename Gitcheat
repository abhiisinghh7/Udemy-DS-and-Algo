$ echo "#Practice Problems" >> README.md
To initialize empty git repository
$git init
To add this file we will type
$ git add .
$ git commit -m 'Message'
$ git push origin master
To add the directory on GitHub:
$ git remote add origin http://github.com/your_username/myproject.git
First he would have to download the whole repository in which the fileis present into his system.
$ git clone https://github.com/your_username/myproject.git
If the first user wish to see the changes, then he can see it by typing:
$ git pull origin master
-----------------------------------------------------------------------------------------------
Configure tooling
Configure user information for all local repositories
$ git config --global user.name "[name]"
$ git config --global user.email "[email address]"
------------------------------------------------------------------------------------------------
Branches
Branches are an important part of working with Git. Any commits you make will be made on the branch you're currently “checked out” to. Use  git status to see which branch that is.
$ git branch [branch-name]
Creates a new branch
$ git checkout [branch-name]
Switches to the specified branch and updates the working directory
$ git merge [branch]
Combines the specified branch’s history into the current branch. This is usually done in pull requests, but is an important Git operation.
$ git branch -d [branch-name]
Deletes the specified branch
------------------------------------------------------------------------------------------------
Synchronize changes
Synchronize your local repository with the remote repository on GitHub.com
$ git fetch
Downloads all history from the remote tracking branches
$ git merge
Combines remote tracking branch into current local branch
$ git push
Uploads all local branch commits to GitHub
$ git pull
Updates your current local working branch with all new commits from the corresponding remote branch on GitHub. git pull  is a combination of   git fetch  and   git merge 
-------------------------------------------------------------------------------------------------
Make changes
Browse and inspect the evolution of project files$ git diff [first-branch]...[second-branchShows content differences between two branch
$ git log
Lists version history for the current branch
$ git log --follow [file]
Lists version history for a file, including renames
$ git diff [first-branch]...[second-branch]
Shows content differences between two branches
$ git show [commit]
Outputs metadata and content changes of the specified commit
$ git add [file]
Snapshots the file in preparation for versioning
$ git commit -m "[descriptive message]"
Records file snapshots permanently in version history
-------------------------------------------------------------------------------------------------
Redo commits
Erase mistakes and craft replacement history
$ git reset [commit]
Undoes all commits after [commit], preserving changes locally
$ git reset --hard [commit]
Discards all history and changes back to the specified commit
